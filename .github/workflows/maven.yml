# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build_test:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./task2
    permissions:
      contents: read
      actions: read
      checks: write
    steps:
    - uses: actions/checkout@v4
    - name: set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Cache the Maven packages to speed up build
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2     
  
    - name: run checkstyle
      run: 
        mvn checkstyle:checkstyle
    - name: test code
      run: mvn test
    - name: tt
      run: ls -alt ./target 
    - name: test report
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Test Reports
        path: task2/target/surefire-reports/*.xml
        reporter: java-junit
        fail-on-error: true
  
  compile-jar:
  
    runs-on: ubuntu-latest
    needs: [build_test]
    defaults:
      run:
        working-directory: ./task2
    steps:
      - uses: actions/checkout@v4
      - name: set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: 11
          distribution: 'temurin'
          cache: maven
      - name: compile jar
        run: mvn -B package --file pom.xml -DskipTests
      - run: ls -alt
      - run: mkdir staging && cp ./target/*-shaded.jar staging
      - uses: actions/upload-artifact@v3
        with:
          name: package
          path: task2/staging
      - run: ls
      
